!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("d3-selection"),require("d3-array"),require("d3kit"),require("labella"),require("d3-axis"),require("d3-scale"),require("d3-dispatch"),require("d3-transition")):"function"==typeof define&&define.amd?define(["d3-selection","d3-array","d3kit","labella","d3-axis","d3-scale","d3-dispatch","d3-transition"],e):"object"==typeof exports?exports.d3KitTimeline=e(require("d3-selection"),require("d3-array"),require("d3kit"),require("labella"),require("d3-axis"),require("d3-scale"),require("d3-dispatch"),require("d3-transition")):t.d3KitTimeline=e(t.d3,t.d3,t.d3Kit,t.labella,t.d3,t.d3,t.d3,t.d3)}(window,function(t,e,n,r,a,i,o,s){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=7)}([function(e,n){e.exports=t},function(t,n){t.exports=e},function(t,e){t.exports=n},function(t,e){t.exports=r},function(t,e){t.exports=a},function(t,e){t.exports=i},function(t,e){t.exports=o},function(t,e,n){t.exports=n(9)},function(t,e){t.exports=s},function(t,e,n){"use strict";n.r(e);var r=n(4),a=n(5),i=n(6),o=n(0);function s(){o.event.stopImmediatePropagation()}var l=function(){o.event.preventDefault(),o.event.stopImmediatePropagation()},u=function(t){var e=t.document.documentElement,n=Object(o.select)(t).on("dragstart.drag",l,!0);"onselectstart"in e?n.on("selectstart.drag",l,!0):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")};var c=function(t){return function(){return t}};function d(t,e,n,r,a,i,o,s,l,u){this.target=t,this.type=e,this.subject=n,this.identifier=r,this.active=a,this.x=i,this.y=o,this.dx=s,this.dy=l,this._=u}function f(){return!o.event.button}function h(){return this.parentNode}function p(t){return null==t?{x:o.event.x,y:o.event.y}:t}function g(){return"ontouchstart"in this}d.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var y=function(){var t,e,n,r,a=f,y=h,v=p,b=g,m={},x=Object(i.dispatch)("start","drag","end"),k=0,F=0;function w(t){t.on("mousedown.drag",O).filter(b).on("touchstart.drag",C).on("touchmove.drag",_).on("touchend.drag touchcancel.drag",M).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function O(){if(!r&&a.apply(this,arguments)){var i=P("mouse",y.apply(this,arguments),o.mouse,this,arguments);i&&(Object(o.select)(o.event.view).on("mousemove.drag",j,!0).on("mouseup.drag",T,!0),u(o.event.view),s(),n=!1,t=o.event.clientX,e=o.event.clientY,i("start"))}}function j(){if(l(),!n){var r=o.event.clientX-t,a=o.event.clientY-e;n=r*r+a*a>F}m.mouse("drag")}function T(){var t,e,r,a;Object(o.select)(o.event.view).on("mousemove.drag mouseup.drag",null),t=o.event.view,e=n,r=t.document.documentElement,a=Object(o.select)(t).on("dragstart.drag",null),e&&(a.on("click.drag",l,!0),setTimeout(function(){a.on("click.drag",null)},0)),"onselectstart"in r?a.on("selectstart.drag",null):(r.style.MozUserSelect=r.__noselect,delete r.__noselect),l(),m.mouse("end")}function C(){if(a.apply(this,arguments)){var t,e,n=o.event.changedTouches,r=y.apply(this,arguments),i=n.length;for(t=0;t<i;++t)(e=P(n[t].identifier,r,o.touch,this,arguments))&&(s(),e("start"))}}function _(){var t,e,n=o.event.changedTouches,r=n.length;for(t=0;t<r;++t)(e=m[n[t].identifier])&&(l(),e("drag"))}function M(){var t,e,n=o.event.changedTouches,a=n.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<a;++t)(e=m[n[t].identifier])&&(s(),e("end"))}function P(t,e,n,r,a){var i,s,l,u=n(e,t),c=x.copy();if(Object(o.customEvent)(new d(w,"beforestart",i,t,k,u[0],u[1],0,0,c),function(){return null!=(o.event.subject=i=v.apply(r,a))&&(s=i.x-u[0]||0,l=i.y-u[1]||0,!0)}))return function f(h){var p,g=u;switch(h){case"start":m[t]=f,p=k++;break;case"end":delete m[t],--k;case"drag":u=n(e,t),p=k}Object(o.customEvent)(new d(w,h,i,t,p,u[0]+s,u[1]+l,u[0]-g[0],u[1]-g[1],c),c.apply,c,[h,r,a])}}return w.filter=function(t){return arguments.length?(a="function"==typeof t?t:c(!!t),w):a},w.container=function(t){return arguments.length?(y="function"==typeof t?t:c(t),w):y},w.subject=function(t){return arguments.length?(v="function"==typeof t?t:c(t),w):v},w.touchable=function(t){return arguments.length?(b="function"==typeof t?t:c(!!t),w):b},w.on=function(){var t=x.on.apply(x,arguments);return t===x?w:t},w.clickDistance=function(t){return arguments.length?(F=(t=+t)*t,w):Math.sqrt(F)},w},v=(n(8),n(1)),b=n(2),m=n(3),x=n.n(m),k=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var F=function(t){return t.w},w=function(t){return t.h},O=function(t){return t},j=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n));return r.layers.create(["dummy",{main:["axis","link","dot","label"]}]),r.layers.get("main/axis").classed("axis",!0),r.force=new x.a.Force(n.labella),r.updateLabelText=r.updateLabelText.bind(r),r.visualize=r.visualize.bind(r),r.on("data",r.visualize),r.on("resize",r.visualize),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,b["SvgChart"]),k(e,null,[{key:"getDefaultOptions",value:function(){return b.helper.deepExtend(function t(e,n,r){null===e&&(e=Function.prototype);var a=Object.getOwnPropertyDescriptor(e,n);if(void 0===a){var i=Object.getPrototypeOf(e);return null===i?void 0:t(i,n,r)}if("value"in a)return a.value;var o=a.get;return void 0!==o?o.call(r):void 0}(e.__proto__||Object.getPrototypeOf(e),"getDefaultOptions",this).call(this),{margin:{left:40,right:20,top:20,bottom:20},initialWidth:400,initialHeight:400,scale:Object(a.scaleTime)(),domain:void 0,direction:"right",dotRadius:3,formatAxis:O,layerGap:60,layerGapFn:void 0,labella:{},keyFn:void 0,timeFn:function(t){return t.time},endTimeFn:function(t){return t.endTime},textFn:function(t){return t.text},offsetFn:function(t){return t.offset},offsetTangentFn:function(t){return t.offsetTangent},textOffsetFn:function(t){return t.textOffset},endDotColor:"#009900",dotColor:"#222",labelBgColor:"#222",labelTextColor:"#fff",lineColor:"#222",linkColor:"#222",labelPadding:{left:4,right:4,top:3,bottom:2},textYOffset:"0.85em"})}},{key:"getCustomEventNames",value:function(){return["dotClick","dotMouseover","dotMousemove","dotMouseout","dotMouseenter","dotMouseleave","labelClick","labelMouseover","labelMousemove","labelMouseenter","labelMouseleave","labelMouseout","labelDrag","labelDragStart","labelDragEnd"]}}]),k(e,[{key:"resizeToFit",value:function(){var t=this.options(),e=void 0,n=this.force.nodes();switch(t.direction){case"up":e=Object(v.max)(n,function(t){return Math.abs(t.y)})||0,this.height(e+t.margin.top+t.margin.bottom);break;case"down":e=Object(v.max)(n,function(t){return Math.abs(t.y+t.dy)})||0,this.height(e+t.margin.top+t.margin.bottom);break;case"left":e=Object(v.max)(n,function(t){return Math.abs(t.x)})||0,this.width(e+t.margin.left+t.margin.right);break;case"right":e=Object(v.max)(n,function(t){return Math.abs(t.x+t.dx)})||0,this.width(e+t.margin.left+t.margin.right)}return this}},{key:"updateLabelText",value:function(t,e,n){var r=this.options();return n=n?b.helper.functor(n):O,t.text(function(t){return r.textFn(n(t))}).attr("dy",r.textYOffset).attr("x",r.labelPadding.left).attr("y",r.labelPadding.top),Object.keys(e).forEach(function(r){var a=e[r];t.style(r,function(t,e){return a(n(t),e)})}),t}},{key:"drawAxes",value:function(){var t=this.options(),e=void 0;switch(t.direction){case"right":this.axis=Object(r.axisLeft)(),e="translate(0,0)";break;case"left":this.axis=Object(r.axisRight)(),e="translate("+this.getInnerWidth()+",0)";break;case"up":this.axis=Object(r.axisBottom)(),e="translate(0,"+this.getInnerHeight()+")";break;case"down":this.axis=Object(r.axisTop)(),e="translate(0,0)"}return this.layers.get("main").attr("transform",e),(t.formatAxis||O)(this.axis.scale(t.scale)),this.layers.get("main/axis").call(this.axis),this}},{key:"drawDots",value:function(t){var e=this.options(),n=function(t){return e.scale(e.timeFn(t))},r=this.layers.get("main/dot").selectAll("circle.dot").data(t,e.keyFn),a="left"===e.direction||"right"===e.direction?"cy":"cx",i="cy"===a?"cx":"cy",o="cy"===a?"x":"y",s="cy"===a?"y":"x";if("transparent"===e.dotColor?(r.enter().append("rect").classed("dot",!0).style("stroke",e.lineColor).attr(o,function(t){return e.offsetFn(t)}).attr(s,function(t){return n(t)+e.offsetTangentFn(t)}).attr("width",e.dotRadius).attr("height",1),r.transition().style("stroke",e.lineColor).attr(o,function(t){return e.offsetFn(t)}).attr(s,function(t){return n(t)+e.offsetTangentFn(t)}).attr("width",e.dotRadius).attr("height",1)):(r.enter().append("circle").classed("dot",!0).on("click",this.dispatchAs("dotClick")).on("mouseover",this.dispatchAs("dotMouseover")).on("mousemove",this.dispatchAs("dotMousemove")).on("mouseout",this.dispatchAs("dotMouseout")).on("mouseenter",this.dispatchAs("dotMouseenter")).on("mouseleave",this.dispatchAs("dotMouseleave")).style("fill",e.dotColor).attr("r",e.dotRadius).attr(a,function(t){return n(t)+e.offsetTangentFn(t)}).attr(i,function(t){return e.offsetFn(t)}),r.transition().style("fill",e.dotColor).attr("r",e.dotRadius).attr(a,function(t){return n(t)+e.offsetTangentFn(t)}).attr(i,function(t){return e.offsetFn(t)})),e.endTimeFn){var l=function(t){return e.scale(e.endTimeFn(t))};"transparent"===e.endDotColor?(r.enter().append("rect").classed("dot",!0).style("stroke",e.lineColor).attr(o,function(t){return e.offsetFn(t)}).attr(s,function(t){return l(t)+e.offsetTangentFn(t)}).attr("width",e.dotRadius).attr("height",1),r.transition().style("stroke",e.lineColor).attr(o,function(t){return e.offsetFn(t)}).attr(s,function(t){return l(t)+e.offsetTangentFn(t)}).attr("width",e.dotRadius).attr("height",1)):(r.enter().append("circle").classed("dot",!0).style("fill",e.endDotColor).attr("r",e.dotRadius).attr(a,function(t){return l(t)+e.offsetTangentFn(t)}).attr(i,function(t){return e.offsetFn(t)}),r.transition().style("fill",e.endDotColor).attr("r",e.dotRadius).attr(a,function(t){return l(t)+e.offsetTangentFn(t)}).attr(i,function(t){return e.offsetFn(t)})),r.enter().append("rect").classed("time-duration",!0).style("stroke",e.lineColor).attr(o,function(t){return e.offsetFn(t)}).attr(s,function(t){return n(t)+e.offsetTangentFn(t)}).attr("width",1).attr("height",function(t){return l(t)-n(t)}),r.transition().style("stroke",e.lineColor).attr(o,function(t){return e.offsetFn(t)}).attr(s,function(t){return n(t)+e.offsetTangentFn(t)}).attr("width",1).attr("height",function(t){return l(t)-n(t)})}return r.exit().remove(),this}},{key:"drawLabels",value:function(t,e){var n=this.options(),r=void 0;function a(t){var e=n.offsetFn(t.data),a=n.offsetTangentFn(t.data)+n.textOffsetFn(t.data);switch(n.direction){case"right":return"translate("+(t.x+e)+","+(a+t.y-t.dy/2)+")";case"left":return"translate("+(t.x+r-t.w-e)+","+(a+t.y-t.dy/2)+")";case"up":return"translate("+(a+t.x-t.dx/2)+","+(t.y+e)+")";case"down":return"translate("+(a+t.x-t.dx/2)+","+(t.y-e)+")"}}r="left"===n.direction||"right"===n.direction?Object(v.max)(t,F):Object(v.max)(t,w),new x.a.Renderer({nodeHeight:r,layerGap:n.layerGap,layerGapFn:n.layerGapFn,direction:n.direction}).layout(t);var i=b.helper.functor(n.labelBgColor),o=(b.helper.functor(n.linkColor),this.layers.get("main/label").selectAll("g.label-g").data(t,n.keyFn?function(t){return n.keyFn(t.data)}:void 0)),s=o.enter().append("g").classed("label-g",!0).attr("transform",a).call(y().on("start",this.dispatchAs("labelDragStart")).on("end",this.dispatchAs("labelDragEnd")).on("drag",this.dispatchAs("labelDrag")));s.append("rect").classed("label-bg",!0).attr("rx",2).attr("ry",2).attr("width",F).attr("height",w).style("fill",function(t){return i(t.data)}),s.append("text").classed("label-text",!0).call(this.updateLabelText,e,function(t){return t.data});var l=o.transition().attr("transform",a);return l.select("rect").attr("width",F).attr("height",w).style("fill",function(t){return i(t.data)}),l.select("text.label-text").call(this.updateLabelText,e,function(t){return t.data}),o.exit().remove(),this}},{key:"drawLink",value:function(t){var e=this.options(),n=void 0;n="left"===e.direction||"right"===e.direction?Object(v.max)(t,F):Object(v.max)(t,w);var r=new x.a.Renderer({nodeHeight:n,layerGap:e.layerGap,layerGapFn:e.layerGapFn,direction:e.direction}),a=e.linkColor,i=this.layers.get("main/link").selectAll("path.link").data(t,e.keyFn?function(t){return e.keyFn(t.data)}:void 0);i.enter().append("path").classed("link",!0).attr("d",function(t){return r.generatePath(t)}).style("stroke",function(t){return a(t.data)}).style("fill","none").attr("transform",function(t){var n=e.offsetFn(t.data),r=e.offsetTangentFn(t.data);return"left"===e.direction||"right"===e.direction?"translate("+n+", "+r+")":"translate("+r+", "+n+")"}),i.transition().attr("d",function(t){return r.generatePath(t)}).style("stroke",function(t){return a(t.data)}).attr("transform",function(t){var n=e.offsetFn(t.data),r=e.offsetTangentFn(t.data);return"left"===e.direction||"right"===e.direction?"translate("+n+", "+r+")":"translate("+r+", "+n+")"}),i.exit().remove()}},{key:"drawLinks",value:function(t){var e=this.options(),n=void 0;n="left"===e.direction||"right"===e.direction?Object(v.max)(t,F):Object(v.max)(t,w);var r=new x.a.Renderer({nodeHeight:n,layerGap:e.layerGap,layerGapFn:e.layerGapFn,direction:e.direction});r.layout(t);var a=b.helper.functor(e.linkColor),i=this.layers.get("main/link").selectAll("path.link").data(t,e.keyFn?function(t){return e.keyFn(t.data)}:void 0);i.enter().append("path").classed("link",!0).attr("d",function(t){return r.generatePath(t)}).style("stroke",function(t){return a(t.data)}).style("fill","none").attr("transform",function(t){var n=e.offsetFn(t.data),r=e.offsetTangentFn(t.data);return"left"===e.direction||"right"===e.direction?"translate("+n+", "+r+")":"translate("+r+", "+n+")"}),i.transition().attr("d",function(t){return r.generatePath(t)}).style("stroke",function(t){return a(t.data)}).attr("transform",function(t){var n=e.offsetFn(t.data),r=e.offsetTangentFn(t.data);return"left"===e.direction||"right"===e.direction?"translate("+n+", "+r+")":"translate("+r+", "+n+")"}),i.exit().remove()}},{key:"visualize",value:function(){var t=this;if(this.hasData()&&this.hasNonZeroArea()){var e=this.data()||[],n=this.options();this.force=new x.a.Force(n.labella),n.domain?n.scale.domain(n.domain):n.scale.domain(Object(v.extent)(e,n.timeFn)).nice(),n.scale.range([0,"left"===n.direction||"right"===n.direction?this.getInnerHeight():this.getInnerWidth()]);var r=b.helper.extend({},n.textStyle);Object.keys(r).forEach(function(t){r[t]=b.helper.functor(r[t])}),r.fill=r.fill||b.helper.functor(n.labelTextColor);var a=this.layers.get("dummy").append("text").classed("label-text",!0),i=e.map(function(e){var i=a.call(t.updateLabelText,r,e).node().getBBox(),o=i.width+n.labelPadding.left+n.labelPadding.right,s=i.height+n.labelPadding.top+n.labelPadding.bottom,l=new x.a.Node(function(t){return n.scale(n.timeFn(t))}(e),"left"===n.direction||"right"===n.direction?s:o,e);return l.w=o,l.h=s,l});return a.remove(),this.force.options(n.labella).nodes(i).compute(),this.drawAxes(),this.drawDots(e),this.drawLabels(this.force.nodes(),r),this.drawLinks(this.force.nodes()),this}}}]),e}();e.default=j}]).default});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,